# This is a comment!

# Recursive fibonacci numbers
func fibR(x) {
    if (x < 3) {
        return 1;
    } else {
        return fibR(x-1) + fibR(x-2);
    }
}

# Iterative fibonacci numbers
func fibI(n) {
    if (n == 0) {return 0;}
    if (n == 1) {return 1;}
        
    var prevPrev = 0;
    var prev = 1;
    var result = 0;
    
    for (var i = 2; i <= n; i = i + 1;){
        result = prev + prevPrev;
        prevPrev = prev;
        prev = result;
    }
    return result;
}

# two dimension for loop with return
func forloop(num) {
    for (var i = 0; i <= num; i = i + 1;) {
        for (var j = 0; j <= num; j = j + 1;) {
            print(i,j);
            if (i == num / 2) {
                return i;
            }
        }
    }
}

# two dimensional while loop with return
func whileloop(num) {
    var num2 = num * 2
    while (num < num2) {
        while (num < num2) {
            if (num == 5) {
                return num;
            }
            num = num + 1;
        }
        num = num + 1;
    }
    return num;
}

var x = whileloop(10);

print(x);
print(fibI(x));
print(fibR(x));

